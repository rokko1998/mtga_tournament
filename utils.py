from datetime import datetime, timedelta

async def nearest_weekend():
    today = datetime.today().date()  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
    weekday = today.weekday()

    if weekday == 5:  # –°–µ–≥–æ–¥–Ω—è —Å—É–±–±–æ—Ç–∞
        next_saturday = today
        next_sunday = today + timedelta(days=1)
    elif weekday == 6:  # –°–µ–≥–æ–¥–Ω—è –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
        next_saturday = today + timedelta(days=6)
        next_sunday = today
    else:  # –õ—é–±–æ–π –¥—Ä—É–≥–æ–π –¥–µ–Ω—å
        days_until_saturday = 5 - weekday
        days_until_sunday = 6 - weekday
        next_saturday = today + timedelta(days=days_until_saturday)
        next_sunday = today + timedelta(days=days_until_sunday)

    dates = [
        datetime(next_saturday.year, next_saturday.month, next_saturday.day, 12, 0),
        datetime(next_saturday.year, next_saturday.month, next_saturday.day, 18, 0),
        datetime(next_sunday.year, next_sunday.month, next_sunday.day, 12, 0),
        datetime(next_sunday.year, next_sunday.month, next_sunday.day, 18, 0),
    ]

    return dates

async def get_info(tournament):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–∫–∏
    if "error" in tournament:
        return f"–û—à–∏–±–∫–∞: {tournament['error']}"

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    message = f"<b>üèÜ –¢—É—Ä–Ω–∏—Ä: </b> {tournament['tournament_name']}\n"
    message += f"<b>üìÖ –î–∞—Ç–∞: </b> {tournament['tournament_date'].strftime('%Y-%m-%d %H:%M')}\n"
    message += f"<b>üîñ –°—Ç–∞—Ç—É—Å: </b> {tournament['tournament_status'].value.capitalize()}\n\n"

    # –°–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
    message += "<b>üë• –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∏:</b>\n"
    for username, mtg_username in tournament["registered_players"].items():
        message += f"- {username} (MTG: {mtg_username})\n"

    if not tournament["registered_players"]:
        message += "–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤.\n"

    message += "\n"

    # –¢–æ–ø-3 —Å–µ—Ç–∞ –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏
    message += "<b>üèÖ –¢–æ–ø-3 —Å–µ—Ç–∞ –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏:</b>\n"
    for i, set_info in enumerate(tournament["top_sets"], start=1):
        message += f"{i}. {set_info['set_name']} - {set_info['votes']} –≥–æ–ª–æ—Å–æ–≤\n"

    if not tournament["top_sets"]:
        message += "–ù–µ—Ç –≥–æ–ª–æ—Å–æ–≤ –∑–∞ —Å–µ—Ç—ã.\n"
    return message